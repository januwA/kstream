!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.kstream=e():t.kstream=e()}(this,(function(){return(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{kstream:()=>s});const i=require("fs");class s{v;pos_;littleEndian;textDecoder=new TextDecoder;textEncoder=new TextEncoder;offset=0;get pos(){return this.pos_}set pos(t){this.offset=t-this.pos_,this.pos_=t}constructor(t,e=0,i=!0){this.v=t,this.pos_=e,this.littleEndian=i}static create(t,e=0,n=!0){let r;if("string"==typeof t){const e=i.readFileSync(t),s=new Uint8Array(e.byteLength);e.copy(s,0,0,e.byteLength),r=new DataView(s.buffer)}else if(t instanceof Buffer){const e=new Uint8Array(t.byteLength);t.copy(e,0,0,t.byteLength),r=new DataView(e.buffer)}else if(t instanceof Uint8Array)r=new DataView(t.buffer);else{if(!(t instanceof DataView))throw"Unknown args[0]";r=t}return new s(r,e,n)}_pos(t=1){const e=this.pos_;return this.pos_+=t,this.offset=t,e}back(){this.pos-=this.offset}eof(){return this.pos_>=this.v.byteLength}get i8(){return this.v.getInt8(this._pos())}set i8(t){this.v.setInt8(this._pos(),t)}get u8(){return this.v.getUint8(this._pos())}set u8(t){this.v.setUint8(this._pos(),t)}get i16(){return this.v.getInt16(this._pos(2),this.littleEndian)}set i16(t){this.v.setInt16(this._pos(2),t,this.littleEndian)}get u16(){return this.v.getUint16(this._pos(2),this.littleEndian)}set u16(t){this.v.setUint16(this._pos(2),t,this.littleEndian)}get i32(){return this.v.getInt32(this._pos(4),this.littleEndian)}set i32(t){this.v.setInt32(this._pos(4),t,this.littleEndian)}get u32(){return this.v.getUint32(this._pos(4),this.littleEndian)}set u32(t){this.v.setUint32(this._pos(4),t,this.littleEndian)}get i64(){return this.v.getBigInt64(this._pos(8),this.littleEndian)}set i64(t){this.v.setBigInt64(this._pos(8),t,this.littleEndian)}get u64(){return this.v.getBigUint64(this._pos(8),this.littleEndian)}set u64(t){this.v.setBigUint64(this._pos(8),t,this.littleEndian)}get float(){return this.v.getFloat32(this._pos(4),this.littleEndian)}set float(t){this.v.setFloat32(this._pos(4),t,this.littleEndian)}get double(){return this.v.getFloat64(this._pos(8),this.littleEndian)}set double(t){this.v.setFloat64(this._pos(8),t,this.littleEndian)}readString(t=-1){if(0===t)return"";const e=[];let i;if(-1===t){let t=1;for(;i=this.u8;)e.push(i),t++;this.offset=t}else for(this.offset=t;t--;){if(i=this.v.getUint8(this.pos_++),0===i){this.pos_+=t;break}e.push(i)}return this.textDecoder.decode(new Uint8Array(e))}writeString(t){const e=this.textEncoder.encode(t);for(const t of e)this.u8=t;this.offset=e.byteLength}copy(t){const e=new Uint8Array(new ArrayBuffer(t));for(let i=0;i<t;e[i]=this.pu8(i++));return e}insert(t){const e=new DataView(new ArrayBuffer(this.v.byteLength+t.byteLength));let i=t;t instanceof DataView&&(i=new Uint8Array(t.buffer));let s=0;const n=this.pos_;for(;s<this.pos_;s++)e.setUint8(s,this.v.getUint8(s));for(let t=0;t<i.byteLength;t++,s++)e.setUint8(s,i[t]);for(;s<e.byteLength;s++)e.setUint8(s,this.u8);this.v=e,this.pos_=n+i.byteLength,this.offset=i.byteLength}set(t,e){for(let i=0;i<e;i++)this.u8=t;this.offset=e}cmp(t,e,i=0){let s=t;t instanceof Uint8Array&&(s=new DataView(t));for(let t=0;t<e;t++)if(this.pu8(t)!==s.getUint8(i+t))return!1;return!0}icmp(t,e,i=0){let s=t;t instanceof Uint8Array&&(s=new DataView(t));for(let t=0;t<e;t++){const e=this.pu8(t),n=s.getUint8(i+t);if(e!==n&&e+32!==n&&n+32!==e)return!1}return!0}pi8(t=0){return this.v.getInt8(this.pos_+t)}pu8(t=0){return this.v.getUint8(this.pos_+t)}pi16(t=0){return this.v.getInt16(this.pos_+t,this.littleEndian)}pu16(t=0){this.v.getUint16(this.pos_+t,this.littleEndian)}pi32(t=0){return this.v.getInt32(this.pos_+t,this.littleEndian)}pu32(t=0){return this.v.getUint32(this.pos_+t,this.littleEndian)}pi64(t=0){return this.v.getBigInt64(this.pos_+t,this.littleEndian)}pu64(t=0){return this.v.getBigUint64(this.pos_+t,this.littleEndian)}pstring(t=-1){const e=this.readString(t);return this.back(),e}}return e})()}));